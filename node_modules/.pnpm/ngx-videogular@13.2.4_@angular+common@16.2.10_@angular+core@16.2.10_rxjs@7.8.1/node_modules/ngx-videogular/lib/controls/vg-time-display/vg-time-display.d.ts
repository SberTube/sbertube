import { ElementRef, OnInit, PipeTransform, OnDestroy } from '@angular/core';
import { VgAPI } from '../../core/services/vg-api';
import { Subscription } from 'rxjs';
import * as i0 from "@angular/core";
export declare class VgUtcPipe implements PipeTransform {
    transform(value: number, format: string): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<VgUtcPipe, never>;
    static ɵpipe: i0.ɵɵPipeDeclaration<VgUtcPipe, "vgUtc">;
}
export declare class VgTimeDisplay implements OnInit, OnDestroy {
    API: VgAPI;
    vgFor: string;
    vgProperty: string;
    vgFormat: string;
    elem: HTMLElement;
    target: any;
    subscriptions: Subscription[];
    constructor(ref: ElementRef, API: VgAPI);
    ngOnInit(): void;
    onPlayerReady(): void;
    getTime(): number;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<VgTimeDisplay, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<VgTimeDisplay, "vg-time-display", never, { "vgFor": "vgFor"; "vgProperty": "vgProperty"; "vgFormat": "vgFormat"; }, {}, never, ["*"]>;
}
