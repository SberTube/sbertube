import { ElementRef, EventEmitter, OnDestroy, OnInit, DoCheck } from '@angular/core';
import { Observable, Subscription } from 'rxjs';
import * as i0 from "@angular/core";
export declare class VgCuePoints implements OnInit, OnDestroy, DoCheck {
    ref: ElementRef;
    onEnterCuePoint: EventEmitter<any>;
    onUpdateCuePoint: EventEmitter<any>;
    onExitCuePoint: EventEmitter<any>;
    onCompleteCuePoint: EventEmitter<any>;
    subscriptions: Subscription[];
    cuesSubscriptions: Subscription[];
    onLoad$: Observable<any>;
    onEnter$: Observable<any>;
    onExit$: Observable<any>;
    totalCues: number;
    constructor(ref: ElementRef);
    ngOnInit(): void;
    onLoad(event: any): void;
    updateCuePoints(cues: TextTrackCue[]): void;
    onEnter(event: any): void;
    onExit(event: any): void;
    ngDoCheck(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<VgCuePoints, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<VgCuePoints, "[vgCuePoints]", never, {}, { "onEnterCuePoint": "onEnterCuePoint"; "onUpdateCuePoint": "onUpdateCuePoint"; "onExitCuePoint": "onExitCuePoint"; "onCompleteCuePoint": "onCompleteCuePoint"; }, never>;
}
